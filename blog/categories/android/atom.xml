<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Android | i-chou's tech blog]]></title>
  <link href="i-chou.com/blog/categories/android/atom.xml" rel="self"/>
  <link href="i-chou.com/"/>
  <updated>2014-03-12T16:42:15+08:00</updated>
  <id>i-chou.com/</id>
  <author>
    <name><![CDATA[i-chou]]></name>
    <email><![CDATA[ios_develop@me.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Google API 方式制作饼状图]]></title>
    <link href="i-chou.com/blog/2012/12/11/google-api-fang-shi-zhi-zuo-bing-zhuang-tu/"/>
    <updated>2012-12-11T11:00:48+08:00</updated>
    <id>i-chou.com/blog/2012/12/11/google-api-fang-shi-zhi-zuo-bing-zhuang-tu</id>
    <content type="html"><![CDATA[<p>最简单的一种方式，Android上面使用<code>WebView</code>控件加载即可，以下是<code>GoogleAPI</code>相关内容。</p>

<p>PS：需要添加网络访问权限。</p>

<p>URL:
<a href="http://chart.apis.google.com/chart?cht=p3&amp;chs=250x100&amp;chd=t:60,40&amp;chl=Hello%7CWorld">http://chart.apis.google.com/chart?cht=p3&amp;chs=250x100&amp;chd=t:60,40&amp;chl=Hello%7CWorld</a></p>

<h4>Components</h4>

<p><a href="https://chart.apis.google.com/chart?">https://chart.apis.google.com/chart?</a></p>

<p>This is the base URL for all chart requests. (However, seeImproving Performance on Pages with Many Charts below for an optional variation for pages with multiple charts.)cht=p3The chart type: here, a 3D pie chart.chs=250x100The chart size (width xheight), in pixels. See the maximum valueshere.chd=t:60,40The chart data. This data is in simple text format, but there areother formats.chl=Hello|WorldTheslice labels.&amp;Parameters are separated by an ampersand.Note: When embedding an URL in HTML, for example as thesrc attribute of an <img> tag, you should replace the&amp; between parameters with the characters&amp; This includes when you generate page HTML with PHP or some other language. However, when typing a URL in the browser, or whencalling a URL in code, for example when fetching a URL in PHP or Perl, you should use the&amp; mark.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Xperia TM GX UI适配遇到的小问题]]></title>
    <link href="i-chou.com/blog/2012/07/25/xperia-tm-gx-uigua-pei-yu-dao-de-xiao-wen-ti/"/>
    <updated>2012-07-25T15:40:49+08:00</updated>
    <id>i-chou.com/blog/2012/07/25/xperia-tm-gx-uigua-pei-yu-dao-de-xiao-wen-ti</id>
    <content type="html"><![CDATA[<p>Sony Xperia TM GX S0-04D 720*1280 和 S0-05D 均为软控制栏，最近在为这两款机器做适配时候遇到一些小问题，分享在这里。</p>

<ul>
<li><p>问题1:</p>

<p>现象：Sony上，从第二行LineaLayout开始往下窜一定距离。从其他机器和模拟器上均显示正常。</p>

<p>原因：LinearLayout的Wrap_content属性在Sony和其它机器里的解析有所不同。</p>

<p>改善：将高度设置成内容的实际高度dp值。</p></li>
<li><p>问题2:</p>

<p>现象：4.0以后机种的SimpleOnGestureListener类手势问题。</p>

<p>原因：onFiling方法触发频繁，导致更换背景的耗时操作使反映变卡。</p>

<p>改善：更换背景耗时操作加入判断条件再触发。</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android PopupWindow的使用]]></title>
    <link href="i-chou.com/blog/2012/06/20/android-popupwindowde-shi-yong/"/>
    <updated>2012-06-20T16:36:24+08:00</updated>
    <id>i-chou.com/blog/2012/06/20/android-popupwindowde-shi-yong</id>
    <content type="html"><![CDATA[<p><a href="http://blog.csdn.net/Android_Tutor/article/details/5576533">Android PopupWindow的使用</a></p>

<p>以上链接解决了画面初始化时直接弹出PopUpWindow的需求。测试有效。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[当Eclipse遇到ADT升级]]></title>
    <link href="i-chou.com/blog/2012/04/23/dang-eclipseyu-dao-adtsheng-ji/"/>
    <updated>2012-04-23T15:30:48+08:00</updated>
    <id>i-chou.com/blog/2012/04/23/dang-eclipseyu-dao-adtsheng-ji</id>
    <content type="html"><![CDATA[<ul>
<li><p>问题一：
Eclipse3.7.2 + ADT18 一直出现找不到jar中class的问题。今天终于找到结果。由于新版本中把lib名称改称libs的缘故。</p>

<p>解决方案：</p>

<p>This issue occurs because the &ldquo;lib&rdquo; folder is renamed to &ldquo;libs&rdquo; now by Android People. And as soon as we place our external jars to this &ldquo;libs&rdquo; folder then it will automatically be added to the build path of the application.</p>

<p>Remove the libraries from the standard Java build path :</p>

<p>Right click on the project name > Properties > Java Build Path > tab Libraries > remove everything except the “Android X.X” (2.3.3 in my case) and the “Android Dependencies”</p>

<p>Rename the libraries folder from “lib” to “libs”</p>

<p>By doing that, all the libraries in the folder “libs” are found by the Android plugin and are added to the “Android Dependencies” item of the project</p>

<p>Clean the project (not exactly needed)</p>

<p>You are good to go !</p>

<p>参考：</p>

<ol>
<li><p><a href="http://stackoverflow.com/questions/9923161/getting-classnotfound-error-after-updating-from-adt-16-to-adt-17">http://stackoverflow.com/questions/9923161/getting-classnotfound-error-after-updating-from-adt-16-to-adt-17</a></p></li>
<li><p><a href="http://android.foxykeep.com/dev/how-to-fix-the-classdefnotfounderror-with-adt-17">http://android.foxykeep.com/dev/how-to-fix-the-classdefnotfounderror-with-adt-17</a></p></li>
<li><p><a href="http://www.eoeandroid.com/thread-165493-1-1.html">http://www.eoeandroid.com/thread-165493-1-1.html</a></p></li>
</ol>
</li>
<li><p>问题二：
Eclipse每次run都重新开启一个新的emulator运行</p>

<p>解决方案：</p>

<p>在点击 <code>Run as</code> ⇒<code>Android Application</code>以后，选择弹出窗口左下方的 <code>use same device for furture launches</code></p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android Canvas绘制文字 自动换行]]></title>
    <link href="i-chou.com/blog/2012/04/14/android-canvashui-zhi-wen-zi-zi-dong-huan-xing/"/>
    <updated>2012-04-14T12:38:44+08:00</updated>
    <id>i-chou.com/blog/2012/04/14/android-canvashui-zhi-wen-zi-zi-dong-huan-xing</id>
    <content type="html"><![CDATA[<pre><code>import java.util.Vector; 

import android.graphics.Canvas; 
import android.graphics.Color; 
import android.graphics.Paint; 
import android.graphics.Paint.FontMetrics; 
import android.view.KeyEvent; 

public class TextUtil { 

private float  mTextPosx = 0;// x坐标 
private float  mTextPosy = 0;// y坐标 
private float mTextWidth = 0;// 绘制宽度 
private float mTextHeight = 0;// 绘制高度 
private int mFontHeight = 0;// 绘制字体高度 
private int mPageLineNum = 0;// 每一页显示的行数 
private int mCanvasBGColor = 0;// 背景颜色 
private int mFontColor = 0;// 字体颜色 
private int mAlpha = 0;// Alpha值 
private int mRealLine = 0;// 字符串真实的行数 
private int mCurrentLine = 0;// 当前行 
private int mTextSize = 0;// 字体大小 
private String mStrText = ""; 
private Vector mString = null; 
private Paint mPaint = null; 

public TextUtil(String StrText, float  x, float  y, float w, float h, int bgcolor, 
      int textcolor, int alpha, int textsize) { 
  mPaint = new Paint(); 
  mString = new Vector(); 
  this.mStrText = StrText; 
  this.mTextPosx = x; 
  this.mTextPosy = y; 
  this.mTextWidth = w; 
  this.mTextHeight = h; 
  this.mCanvasBGColor = bgcolor; 
  this.mFontColor = textcolor; 
  this.mAlpha = alpha; 
  this.mTextSize = textsize; 
} 

public void InitText() { 
  mString.clear();// 清空Vector 
  // 对画笔属性的设置 
  // mPaint.setARGB(this.mAlpha, Color.red(this.mFontColor), Color 
  // .green(this.mFontColor), Color.blue(this.mFontColor)); 
  mPaint.setTextSize(this.mTextSize); 
  mPaint.setColor(Color.BLUE); 
  mPaint.setAntiAlias(true); 

  this.GetTextIfon(); 
 } 

 /** 
  * 得到字符串信息包括行数，页数等信息 
  */ 
 public void GetTextIfon() { 
  char ch; 
  int w = 0; 
  int istart = 0; 
  FontMetrics fm = mPaint.getFontMetrics();// 得到系统默认字体属性 
  mFontHeight = (int) (Math.ceil(fm.descent - fm.top) + 2);// 获得字体高度 
  mPageLineNum = (int) (mTextHeight / mFontHeight);// 获得行数 

  int count = this.mStrText.length(); 
  for (int i = 0; i &lt; count; i++) { 
      ch = this.mStrText.charAt(i); 
      float[] widths = new float[1]; 
      String str = String.valueOf(ch); 
      mPaint.getTextWidths(str, widths); 
      if (ch == '/n') { 
          mRealLine++;// 真实的行数加一 
          mString.addElement(this.mStrText.substring(istart, i)); 
          istart = i + 1; 
          w = 0; 
      } else { 
          w += (int) Math.ceil(widths[0]); 
          if (w &gt; this.mTextWidth) { 
              mRealLine++;// 真实的行数加一 
              mString.addElement(this.mStrText.substring(istart, i)); 
              istart = i; 
              i--; 
              w = 0; 
          } else { 
              if (i == count - 1) { 
                  mRealLine++;// 真实的行数加一 
                  mString.addElement(this.mStrText.substring(istart, 
                          count)); 
              } 
          } 
      } 
  } 
} 

/** 
 * 绘制字符串 
 * 
 * @param canvas 
 */ 
public void DrawText(Canvas canvas) { 
     for (int i = this.mCurrentLine, j = 0; i &lt; this.mRealLine; i++, j++) { 
          if (j &gt; this.mPageLineNum) { 
              break; 
          } 
       canvas.drawText((String) (mString.elementAt(i)), this.mTextPosx, 
                this.mTextPosy + this.mFontHeight * j, mPaint); 
     } 
 } 

/** 
* 翻页等按键处理 
* 
* @param keyCode 
* @param event 
* @return 
*/ 
public boolean KeyDown(int keyCode, KeyEvent event) { 
    if (keyCode == KeyEvent.KEYCODE_DPAD_UP) { 
       if (this.mCurrentLine &gt; 0) { 
            this.mCurrentLine--; 
        } 
    } else if (keyCode == KeyEvent.KEYCODE_DPAD_DOWN) { 
        if ((this.mCurrentLine + this.mPageLineNum) &lt; (this.mRealLine - 1)) { 
            this.mCurrentLine++; 
        } 
      } 
      return false; 
   } 
}
</code></pre>
]]></content>
  </entry>
  
</feed>
