<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: iOS | i-chou's tech blog]]></title>
  <link href="i-chou.com/blog/categories/ios/atom.xml" rel="self"/>
  <link href="i-chou.com/"/>
  <updated>2016-03-11T15:42:18+08:00</updated>
  <id>i-chou.com/</id>
  <author>
    <name><![CDATA[i-chou]]></name>
    <email><![CDATA[ios_develop@me.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[项目协作中Xcode Search Paths问题]]></title>
    <link href="i-chou.com/blog/2014/03/12/xiang-mu-xie-zuo-zhong-xcode-search-pathswen-ti/"/>
    <updated>2014-03-12T12:23:11+08:00</updated>
    <id>i-chou.com/blog/2014/03/12/xiang-mu-xie-zuo-zhong-xcode-search-pathswen-ti</id>
    <content type="html"><![CDATA[<p>Xcode引用库的时候，编译器会自动添加一个库文件的绝对路径进去，这种情况下，如果其他人从repo上pull下来编译项目就容易出问题，因为找不到之前那个人引用路径下存放的文件了嘛。</p>

<p>那么，引用库或使用CocoaPods的时候，要注意手动把Build Settings里面的<code>Framework Search Paths</code>,<code>Header Search Paths</code>,<code>Library Search Paths</code>中的绝对路径都删掉，改成相对路径，最简单的办法时，全部删掉，然后加入一个<code>../**</code>即可。</p>

<p>顺便，最近Xcode5.1升级导致诸多在架构编译层面的问题。其中一个就是Xcode5.1默认是64位编译器编译。</p>

<p>手动关闭的方法是：选中<code>Targets</code>—><code>Build Settings</code>—><code>Architectures</code>。双击<code>Architectures</code>，选择<code>other</code>，删除<code>$(ARCHS_STANDARD)</code>，然后增加<code>armv7</code>和<code>armv7s</code>，clean一下再编译。
官方不推荐将<code>Valid Architectures</code>的内容修改，所以最好使用上面的方法关闭64位编译。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Those Pop Plug-ins for Xcode]]></title>
    <link href="i-chou.com/blog/2014/03/11/those-pop-plug-ins-for-xcode/"/>
    <updated>2014-03-11T12:13:47+08:00</updated>
    <id>i-chou.com/blog/2014/03/11/those-pop-plug-ins-for-xcode</id>
    <content type="html"><![CDATA[<ul>
<li><h2>Alcatraz</h2>

<p>  Alcatraz is an open-source package manager for Xcode 5. It lets you discover and install plugins, templates and color schemes without the need for manually cloning or copying files. It installs itself as a part of Xcode and it feels like home.</p>

<p>  (亲测Xcode5.1可用)</p>

<p>  项目地址： <a href="https://github.com/mneorr/Alcatraz](https://github.com/mneorr/Alcatraz">https://github.com/mneorr/Alcatraz</a>
  <img src="https://github-camo.global.ssl.fastly.net/f4106ea5018bf4beff4c8625b0f3abe528cceb7d/687474703a2f2f616c63617472617a2e696f2f696d616765732f6865616465724032782e706e67" alt="img" />
  <img src="https://github-camo.global.ssl.fastly.net/919efe4e1e53237df51d7010c862bd5c04fd6a70/687474703a2f2f616c63617472617a2e696f2f696d616765732f73637265656e73686f744032782e706e67" alt="img" /></p></li>
<li><h2>Lin</h2>

<p>  Xcode5 plugin showing completion for NSLocalizedString and localizedStringForKey:value:table:</p>

<p>  (兼容到Xcode5，5.1不可用)</p>

<p>  项目地址： <a href="https://github.com/questbeat/Lin">https://github.com/questbeat/Lin</a></p>

<p>  <img src="https://github-camo.global.ssl.fastly.net/6c4fc4630543be9addbb384133d07074866d0a8a/687474703a2f2f61646f746f75742e73616b7572612e6e652e6a702f6769746875622f4c696e2f6c696e5f737330322e706e67" alt="img" /></p></li>
<li><h2>KFCocoaPodsPlugin</h2>

<p>  XcodePlugin for CocoaPods with pod commands/console output, user notifications &amp; code completion.</p>

<p>  (兼容到Xcode5，5.1不可用)</p>

<p>  项目地址： <a href="https://github.com/ricobeck/KFCocoaPodsPlugin">https://github.com/ricobeck/KFCocoaPodsPlugin</a></p>

<p>  <img src="https://github.com/ricobeck/KFCocoaPodsPlugin/raw/master/Screenshots/Screenshot-Update.png" alt="img" />
  <img src="https://github.com/ricobeck/KFCocoaPodsPlugin/raw/master/Screenshots/Animation-Completion.gif" alt="img" /></p></li>
<li><h2>VVDocumenter-Xcode</h2>

<p>  Xcode plug-in which helps you write Javadoc style documents easier.</p>

<p>  (亲测Xcode5.1可用)</p>

<p>  项目地址： <a href="https://github.com/onevcat/VVDocumenter-Xcode">https://github.com/onevcat/VVDocumenter-Xcode</a></p>

<p>  <img src="https://raw.github.com/onevcat/VVDocumenter-Xcode/master/ScreenShot.gif" alt="img" /></p></li>
<li><h2>Fuzzy Autocomplete for Xcode</h2>

<p>  This is a Xcode 5 plugin that patches the autocomplete filter to work the same way the <code>Open Quickly</code> works.</p>

<p>  It performs very well, and the fuzzy matching actually uses Xcode&rsquo;s own <code>IDEOpenQuicklyPattern</code>.</p>

<p>  I wrote a blog post on how I used <code>dtrace</code> to figure out what to patch: <a href="http://chen.do/blog/2013/10/22/reverse-engineering-xcode-with-dtrace/?utm_source=github&amp;utm_campaign=fuzzyautocomplete">Reverse engineering Xcode with dtrace</a></p>

<p>  Like nifty tools like this plugin? Check out <a href="https://shortcatapp.com/?utm_source=github&amp;utm_campaign=fuzzyautocomplete">Shortcat</a>, an app that lets you control your Mac more effectively with your keyboard!</p>

<p>  (亲测Xcode5.1可用)</p>

<p>  项目地址： <a href="https://github.com/chendo/FuzzyAutocompletePlugin">https://github.com/chendo/FuzzyAutocompletePlugin</a></p>

<p>  <img src="https://raw.github.com/chendo/FuzzyAutocompletePlugin/master/demo.gif" alt="img" /></p></li>
<li><h2>ColorSense-for-Xcode</h2>

<p>  Plugin for Xcode to make working with colors more visual</p>

<p>  (兼容到Xcode4.5)</p>

<p>  项目地址： <a href="https://github.com/omz/ColorSense-for-Xcode">https://github.com/omz/ColorSense-for-Xcode</a></p></li>
<li><h2>Unused</h2>

<p>  A Mac app for checking Xcode projects for unused resources.</p>

<p>  这个虽然不是Xcode插件，但是确实是很有用的东西，他可以把项目中不用的资源文件在可视化窗口中检索出来，以辅助开发人员减少项目中浪费掉的空间。</p>

<p>  项目地址：<a href="https://github.com/jeffhodnett/Unused">https://github.com/jeffhodnett/Unused</a></p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Xcode5.1 Updated to Beta5]]></title>
    <link href="i-chou.com/blog/2014/02/21/xcode5-dot-1-updated-to-beta5/"/>
    <updated>2014-02-21T15:39:49+08:00</updated>
    <id>i-chou.com/blog/2014/02/21/xcode5-dot-1-updated-to-beta5</id>
    <content type="html"><![CDATA[<p><code>Xcode5.1 Beta5</code>和<code>iOS7.1Beta5</code>出来有一周时间了，这次更新苹果把Xcode里的64编译变成了默认，而没有了选项，如果你的项目编译时出了问题，请检查一下编码是否支持64位。</p>

<p>下面有一篇介绍如何为64位编译应用的文章，分享出来，多少会了解一些为64位应用编译所需要的基本东西。
<a href="http://blog.csdn.net/keyboardota/article/details/11993883">iOS 7: 如何为iPhone 5S编译64位应用。 </a></p>

<p>如果您还没有充分准备好为64位编译您的应用，那么请在Xcode5.1项目的Target中<code>Build Settings</code>&ndash;><code>Architectures</code>&ndash;><code>Valid Architectures</code>中的<code>arm64</code>删掉，只保留<code>armv7</code>和<code>armv7s</code>即可。但终究是要兼容64位的，所以，还是抓紧准备吧。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ios7.1 Beta版升级事件]]></title>
    <link href="i-chou.com/blog/2014/02/10/ios7-dot-1-betaban-sheng-ji-shi-jian/"/>
    <updated>2014-02-10T16:15:03+08:00</updated>
    <id>i-chou.com/blog/2014/02/10/ios7-dot-1-betaban-sheng-ji-shi-jian</id>
    <content type="html"><![CDATA[<p>昨晚因为电话找不到了，就在MAC上iCloud里的Find My iPhone呼叫了一下，第二天早上一拿起手机发现让我填写AppleID和密码激活iPhone。我以为是因为昨天呼叫导致的。结果填写时候发现怎么验证都不通过，经查发现，Beta版不让激活。但是不对啊，之前还激活过，就以为是苹果新加的东东。</p>

<p>连上iTunes发现iPhone开着Find My iPhone是无法恢复备份的，但又无法进入系统关掉它。只好再一次进DFU模式刷机。刷成iOS7.0.4系统。可是，我之前的备份是7.1的Beta3的，不让我恢复，只能又固件刷到7.1的beta3（因为Beta4实在无法使用，不知道其他人的怎么样，反正在我的手机上极其不稳定，所以就不打算继续升级Beta版了），然后呢，还是激活不了。</p>

<p>上班以后同事同样出现了无法激活的情况，才发现，是Beta3的测试期限到了。。。20M的宽带下载个1G+的Beta5固件，吃奶的劲都使出来了，还是抓紧分享出来为他人提供方便吧。需要的朋友请自己去百度云下载。</p>

<p>iOS7.1 Beta5固件云盘地址: <a href="http://pan.baidu.com/s/11UoUE">http://pan.baidu.com/s/11UoUE</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS Define for Coding Faster]]></title>
    <link href="i-chou.com/blog/2013/12/30/ios-define-for-coding-faster/"/>
    <updated>2013-12-30T16:11:06+08:00</updated>
    <id>i-chou.com/blog/2013/12/30/ios-define-for-coding-faster</id>
    <content type="html"><![CDATA[<p>以下是我在开发中常用的可以提高开发效率的宏</p>

<pre><code>/* fast make */

#define ccp(__X__,__Y__)             CGPointMake(__X__,__Y__)

#define ccs(__W__,__H__)             CGSizeMake(__W__,__H__)

#define ccr(__X__,__Y__,__W__,__H__) CGRectMake(__X__,__Y__,__W__,__H__)


/* fast creation */

#define IMG(name)       [UIImage imageNamed:(name)]

#define IMG_VIEW(name)  [[UIImageView alloc] initWithImage:[UIImage imageNamed:(name)]]

#define LocalStr(key)   NSLocalizedString(key,key)

#define SFONT(size)     [UIFont systemFontOfSize:(size)]

#define FONT(s)         [UIFont fontWithName:@"Arial" size:(s)]

#define BFONT(size)     [UIFont boldSystemFontOfSize:(size)]

#define BUNDLE(name)    [[NSBundle mainBundle] pathForResource:(name)]

#define URL(url)        [NSURL URLWithString:url]


/* fast appending */

#define ADD(__x__, __y__) [__x__ stringByAppendingString:__y__]


/* iOS_Version */

#define IS_IOS7 ((floor(NSFoundationVersionNumber) &gt; NSFoundationVersionNumber_iOS_6_1))


/* Components size */

#define SCREEN_WIDTH         [[UIScreen mainScreen] bounds].size.width

#define SCREEN_HEIGHT        [[UIScreen mainScreen] bounds].size.height

#define NAV_BAR_HEIGHT       44

#define NAV_BAR_HEIGHT_IOS7  64

#define TOOL_BAR_HEIGHT      44

#define TAB_BAR_HEIGHT       49

#define STATUS_BAR_HEIGHT    20


/* current language */

#define CN 1

#define ENG 2

#define JAN 3


/* color helper */

#define COLORRGBA(c,a) [UIColor colorWithRed:((c&gt;&gt;16)&amp;0xFF)/255.0 \
                                   green:((c&gt;&gt;8)&amp;0xFF)/255.0   \
                                    blue:(c&amp;0xFF)/255.0        \
                                   alpha:a]

#define COLORRGB(c)    [UIColor colorWithRed:((c&gt;&gt;16)&amp;0xFF)/255.0 \
                                   green:((c&gt;&gt;8)&amp;0xFF)/255.0   \
                                    blue:(c&amp;0xFF)/255.0        \
                                   alpha:1.0]


/* log helper */

#define LOG_STR(str)     NSLog(@"%@", str)

#define LOG_INT(int)     NSLog(@"%d", int)

#define LOG_FLOAT(float) NSLog(@"%f", float)

#define LOG_ERROR(exception,reason) NSLog(@"function:%s | line:%d | exception:%@ | reason:%@",__func__, __LINE__,exception,reason)
</code></pre>
]]></content>
  </entry>
  
</feed>
